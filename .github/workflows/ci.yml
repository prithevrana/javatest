name: Java CI with SonarQube and GlassFish Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'

      - name: Build WAR with Maven
        run: mvn clean package

      - name: Check for WAR file
        run: |
          echo "Current directory:"
          pwd
          echo "Target contents:"
          ls -al target || echo "No target folder"
          echo "WAR files:"
          ls -al target/*.war || echo "No WAR files found"

      - name: Run tests
        run: mvn test

      - name: Create GlassFish password file
        run: echo "AS_ADMIN_PASSWORD=${{ secrets.GLASSFISH_ADMIN_PASSWORD }}" > glassfish-password.txt

      - name: Copy WAR and password file to remote server
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > id_rsa
          chmod 600 id_rsa
          export SSH_AUTH_SOCK=""
          scp -i id_rsa -o StrictHostKeyChecking=no target/*.war glassfish-password.txt ${{ secrets.SSH_USER }}@${{ secrets.GLASSFISH_HOST }}:/tmp/
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ssh-passphrase: ${{ secrets.SSH_KEY_PASSPHRASE }}

      - name: Remote Deploy to GlassFish
        run: |
          scp -i id_rsa -o StrictHostKeyChecking=no target/*.war glassfish-password.txt ${{ secrets.SSH_USER }}@${{ secrets.GLASSFISH_HOST }}:/tmp/
            /opt/glassfish4/bin/asadmin --host localhost --port 4848 \
              --user ${{ secrets.GLASSFISH_ADMIN_USERNAME }} \
              --passwordfile /tmp/glassfish-password.txt \
              deploy --force /tmp/*.war
          EOF
